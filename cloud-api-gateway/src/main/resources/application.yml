server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true  # 开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        ###第一种配置路由方式
        - id: payment_routh                 #路由的ID，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8001        #匹配成功后提供服务的路由地址
          uri: lb://cloud-provider-payment  ##通过注册中心所对应的服务名拿取相应服务路径
          predicates:
            - Path=/payment/get/**          #断言，路径相匹配的进行路由 即http://localhost:9527/payment/get/** ->  http://localhost:8001/payment/get/**
        - id: payment_routh2
#          uri: http://localhost:8001
          uri: lb://cloud-provider-payment
          predicates:   ## 进行路由匹配并且进行层层断言
            - Path=/payment/lb/**
#            - After=
            - Cookie=username,pc  ## 必须携带cookie才能访问 值通过正则匹配 curl http://localhost:9527/payment/lb --cookie "username=pc"进行测试
            - Header=X-request-Id, \d+  ## X-request-Id值必须含有整数值 curl http://localhost:9527/payment/lb --cookie "username=pc" -H "X-request-Id:1"
            - Method=GET
            - Query=username,\d+  ## 参数需要携带username，并且值为整数

eureka:
  client:
    register-with-eureka: true  #将自己注册上去
    fetch-registry: true  # 是否从EurekaServer中抓取已有的注册信息，默认为ture，单节点无所谓，集群必须是false才能配置ribbon使用负载均衡
    service-url:
      defaultZone: http://localhost:7000/eureka  #单机eureka
  instance:
    hostname: cloud-gateway-service
